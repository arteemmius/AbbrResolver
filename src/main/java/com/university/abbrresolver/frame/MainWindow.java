package com.university.abbrresolver.frame;

import com.university.abbrresolver.beans.Sentence;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.List;
//import java.util.logging.Level;
//import java.util.logging.Logger;
import javax.swing.JFileChooser;
import jmorfsdk.JMorfSdk;
import jmorfsdk.load.JMorfSdkLoad;
import com.university.abbrresolver.realization.AbbrResolver;
import com.university.abbrresolver.realization.PatternFinder;
import com.university.abbrresolver.realization.TextManager;
import org.apache.log4j.Logger;
//import org.apache.log4j.BasicConfigurator;
import org.apache.commons.lang3.exception.ExceptionUtils;

public class MainWindow extends javax.swing.JFrame {  
    public final static JMorfSdk jMorfSdk = JMorfSdkLoad.loadInAnalysisMode();    
    private static final Logger log = Logger.getLogger(MainWindow.class.getName());
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        //BasicConfigurator.configure(); 
        log.info("Start constructor");         
        initComponents();     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        mainPanel = new javax.swing.JPanel();
        firstPanel = new javax.swing.JPanel();
        inputPanel = new javax.swing.JPanel();
        inputScrollPane = new javax.swing.JScrollPane();
        inputTextArea = new javax.swing.JTextArea();
        performTextButton = new javax.swing.JButton();
        deleteTextButton = new javax.swing.JButton();
        attachButton = new javax.swing.JButton();
        attachedFileLabel = new javax.swing.JLabel();
        outputPanel = new javax.swing.JPanel();
        outputScrollPane = new javax.swing.JScrollPane();
        outputTextArea = new javax.swing.JTextArea();
        exportButton = new javax.swing.JButton();
        secondPanel = new javax.swing.JPanel();
        findAbbrScrollPane = new javax.swing.JScrollPane();
        findAbbrPanel = new javax.swing.JPanel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Устранение сокращений");

        inputTextArea.setColumns(20);
        inputTextArea.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        inputTextArea.setLineWrap(true);
        inputTextArea.setRows(5);
        inputTextArea.setToolTipText("Введите текст...");
        inputTextArea.setWrapStyleWord(true);
        inputScrollPane.setViewportView(inputTextArea);

        performTextButton.setFont(new java.awt.Font("Arial Narrow", 3, 12)); // NOI18N
        performTextButton.setForeground(new java.awt.Color(0, 51, 51));
        performTextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/perform.png"))); // NOI18N
        performTextButton.setToolTipText("Обработать текст");
        performTextButton.setFocusable(false);
        performTextButton.setMaximumSize(new java.awt.Dimension(51, 27));
        performTextButton.setMinimumSize(new java.awt.Dimension(51, 27));
        performTextButton.setPreferredSize(new java.awt.Dimension(51, 27));
        performTextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                performTextButtonActionPerformed(evt);
            }
        });

        deleteTextButton.setFont(new java.awt.Font("Arial Narrow", 3, 12)); // NOI18N
        deleteTextButton.setForeground(new java.awt.Color(0, 51, 51));
        deleteTextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        deleteTextButton.setToolTipText("Очистить поле");
        deleteTextButton.setFocusable(false);
        deleteTextButton.setMaximumSize(new java.awt.Dimension(51, 27));
        deleteTextButton.setMinimumSize(new java.awt.Dimension(51, 27));
        deleteTextButton.setPreferredSize(new java.awt.Dimension(51, 27));
        deleteTextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTextButtonActionPerformed(evt);
            }
        });

        attachButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/open.png"))); // NOI18N
        attachButton.setToolTipText("Загрузить из файла");
        attachButton.setFocusable(false);
        attachButton.setRequestFocusEnabled(false);
        attachButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attachButtonActionPerformed(evt);
            }
        });

        attachedFileLabel.setFont(new java.awt.Font("Arial Narrow", 3, 14)); // NOI18N
        attachedFileLabel.setForeground(new java.awt.Color(0, 51, 51));
        attachedFileLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        attachedFileLabel.setToolTipText("Выгрузить в файл");
        attachedFileLabel.setEnabled(false);
        attachedFileLabel.setOpaque(true);

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputPanelLayout.createSequentialGroup()
                                .addComponent(performTextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(attachButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteTextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(attachedFileLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(performTextButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(attachButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteTextButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(attachedFileLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        outputTextArea.setEditable(false);
        outputTextArea.setColumns(20);
        outputTextArea.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        outputTextArea.setLineWrap(true);
        outputTextArea.setRows(5);
        outputTextArea.setWrapStyleWord(true);
        outputScrollPane.setViewportView(outputTextArea);

        exportButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/export.png"))); // NOI18N
        exportButton.setToolTipText("Выгрузить в файл");
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout outputPanelLayout = new javax.swing.GroupLayout(outputPanel);
        outputPanel.setLayout(outputPanelLayout);
        outputPanelLayout.setHorizontalGroup(
            outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, outputPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(outputScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addGroup(outputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        outputPanelLayout.setVerticalGroup(
            outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(outputScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exportButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout firstPanelLayout = new javax.swing.GroupLayout(firstPanel);
        firstPanel.setLayout(firstPanelLayout);
        firstPanelLayout.setHorizontalGroup(
            firstPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(firstPanelLayout.createSequentialGroup()
                .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        firstPanelLayout.setVerticalGroup(
            firstPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(outputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(inputPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        findAbbrScrollPane.setBackground(new java.awt.Color(204, 255, 204));
        findAbbrScrollPane.setBorder(null);
        findAbbrScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        findAbbrPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Найденные сокращения", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Narrow", 3, 14), new java.awt.Color(0, 51, 51))); // NOI18N
        findAbbrPanel.setLayout(new javax.swing.BoxLayout(findAbbrPanel, javax.swing.BoxLayout.Y_AXIS));
        findAbbrScrollPane.setViewportView(findAbbrPanel);

        javax.swing.GroupLayout secondPanelLayout = new javax.swing.GroupLayout(secondPanel);
        secondPanel.setLayout(secondPanelLayout);
        secondPanelLayout.setHorizontalGroup(
            secondPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secondPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(findAbbrScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        secondPanelLayout.setVerticalGroup(
            secondPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, secondPanelLayout.createSequentialGroup()
                .addComponent(findAbbrScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(firstPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(secondPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(1, 1, 1))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(firstPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(secondPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteTextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTextButtonActionPerformed
        // TODO add your handling code here:
        log.info("Start deleteTextButtonActionPerformed() for clearing the input window");         
        inputTextArea.selectAll();
        inputTextArea.replaceSelection("");
        outputTextArea.selectAll();
        outputTextArea.replaceSelection("");
        findAbbrPanel.removeAll();
        firstPanel.repaint();
        secondPanel.revalidate();
        findAbbrPanel.repaint();
        findAbbrPanel.revalidate();
        log.info("deleteTextButtonActionPerformed() successfully completed");          
    }//GEN-LAST:event_deleteTextButtonActionPerformed


    private void performTextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_performTextButtonActionPerformed
        try {
            log.info("Start performTextButtonActionPerformed() for search abbreviations"); 
            String text = inputTextArea.getText();

            outputTextArea.selectAll();
            outputTextArea.replaceSelection("");

            outputTextArea.repaint();
            outputTextArea.revalidate();
            findAbbrPanel.removeAll();

            findAbbrPanel.repaint();
            findAbbrPanel.revalidate();

            PatternFinder patternFinder = new PatternFinder();
            AbbrResolver abbrResolver = new AbbrResolver(text, true, "http://localhost:8080/TextAnalizerREST-0.4/predictions");
            TextManager textManager = new TextManager(patternFinder, abbrResolver);

            List<Sentence> sentences = textManager.splitText(text, findAbbrPanel);
            log.info("List of sentence = " + sentences);
            log.info("Count sentence = " + sentences.size());
            List<String> result = new ArrayList<>(sentences.size());          
            for (Sentence sentence : sentences) {
                result.add(abbrResolver.resolveAcronyms(jMorfSdk, sentence));

            }

            String resultCommaSeparated = String.join(".", result);
            outputTextArea.setText(resultCommaSeparated);
            log.info("Result = " + resultCommaSeparated);            
            
        } catch (Exception ex) {
            log.info("performTextButtonActionPerformed() complete with error!"); 
            log.error(ExceptionUtils.getStackTrace(ex));
            //Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            outputTextArea.setText(inputTextArea.getText());
        }

        outputTextArea.repaint();
        outputTextArea.revalidate();
        findAbbrPanel.repaint();
        findAbbrPanel.revalidate();
        log.info("performTextButtonActionPerformed() successfully completed");         
    }//GEN-LAST:event_performTextButtonActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        // TODO add your handling code here:
        String output = outputTextArea.getText();
        try {
            log.info("Start exportButtonActionPerformed() for export file");             
            BufferedWriter out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("file.txt"), "UTF-8"));
            out.append(output);
            out.close();           
            System.out.println("File is created");
        } catch (IOException ex) {
            ex.printStackTrace();
            log.info("exportButtonActionPerformed() complete with error!");             
            log.error(ExceptionUtils.getStackTrace(ex));           
        }
        log.info("exportButtonActionPerformed() successfully completed");  
    }//GEN-LAST:event_exportButtonActionPerformed

    private void attachButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attachButtonActionPerformed
        // TODO add your handling code here:
        String line;
        try {
            log.info("Start attachButtonActionPerformed() to import file");              
            JFileChooser fileopen = new JFileChooser();
            int ret = fileopen.showDialog(this, "Открыть файл");
            if (ret == JFileChooser.APPROVE_OPTION) {
                File file = fileopen.getSelectedFile();
                attachedFileLabel.setText(file.getName());
                attachedFileLabel.repaint();
                attachedFileLabel.revalidate();
                file = fileopen.getSelectedFile();
                BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), "UTF-8"));
                while ((line = reader.readLine()) != null) {
                    inputTextArea.append(line);
                    inputTextArea.append("\n");
                }
                reader.close();
            }
        } catch (IOException ex) {
            log.info("attachButtonActionPerformed() complete with error!");             
            log.error(ExceptionUtils.getStackTrace(ex));
        }
        findAbbrPanel.removeAll();
        findAbbrPanel.repaint();
        findAbbrPanel.revalidate();
        log.info("attachButtonActionPerformed() successfully completed");         
    }//GEN-LAST:event_attachButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws FileNotFoundException, Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            log.info("Start main()");                 
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            log.info("main() catch ClassNotFoundException!");             
            log.error(ExceptionUtils.getStackTrace(ex));            
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            log.info("main() catch InstantiationException!");             
            log.error(ExceptionUtils.getStackTrace(ex));              
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            log.info("main() catch IllegalAccessException!");             
            log.error(ExceptionUtils.getStackTrace(ex));              
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            log.info("main() catch javax.swing.UnsupportedLookAndFeelException!");             
            log.error(ExceptionUtils.getStackTrace(ex));              
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
        log.info("main() successfully completed");             
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton attachButton;
    private javax.swing.JLabel attachedFileLabel;
    private javax.swing.JButton deleteTextButton;
    private javax.swing.JButton exportButton;
    public static javax.swing.JPanel findAbbrPanel;
    private javax.swing.JScrollPane findAbbrScrollPane;
    private javax.swing.JPanel firstPanel;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JScrollPane inputScrollPane;
    private javax.swing.JTextArea inputTextArea;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel outputPanel;
    private javax.swing.JScrollPane outputScrollPane;
    private javax.swing.JTextArea outputTextArea;
    private javax.swing.JButton performTextButton;
    private javax.swing.JPanel secondPanel;
    // End of variables declaration//GEN-END:variables
}
